/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package se침orip;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JOptionPane;

/**
 *
 * @author Cristhian Ubaldo Promotor
 */
public class Se침orIP extends javax.swing.JFrame {
    
    
    
    public Se침orIP() {
        initComponents();
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbIndicacion = new javax.swing.JLabel();
        txtSeccion1 = new javax.swing.JTextField();
        txtSeccion2 = new javax.swing.JTextField();
        txtSeccion3 = new javax.swing.JTextField();
        txtSeccion4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        atxtVisor = new javax.swing.JTextArea();
        btnBuscar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IP");
        setBackground(new java.awt.Color(255, 255, 255));

        lbIndicacion.setText("Introduce una direcci칩n IP:");

        txtSeccion1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSeccion1KeyPressed(evt);
            }
        });

        txtSeccion2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSeccion2KeyTyped(evt);
            }
        });

        txtSeccion3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSeccion3KeyTyped(evt);
            }
        });

        txtSeccion4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSeccion4KeyTyped(evt);
            }
        });

        atxtVisor.setEditable(false);
        atxtVisor.setColumns(20);
        atxtVisor.setRows(5);
        jScrollPane1.setViewportView(atxtVisor);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(lbIndicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(btnBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(txtSeccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(txtSeccion2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSeccion3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(txtSeccion4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lbIndicacion)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSeccion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSeccion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSeccion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSeccion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSeccion1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeccion1KeyPressed
        txtSeccion1.addKeyListener(new KeyListener() {   
            
            @Override
            public void keyTyped(KeyEvent tecla) {
                int limiteDigitos = 3;
                
                if (txtSeccion1.getText().length() == limiteDigitos){
                    
                    tecla.consume();
                    txtSeccion1.transferFocus();
                    
                }
                
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
            
        });
        
        txtSeccion1.addKeyListener(new KeyAdapter(){
             @Override
             public void keyTyped(KeyEvent tecla) {

                char caracter = tecla.getKeyChar();

        
                if (!(Character.isDigit(caracter) || (caracter == KeyEvent.VK_BACK_SPACE) || (caracter == KeyEvent.VK_DELETE))) {
                    getToolkit().beep();
                    tecla.consume();  
                }
            }
        });
    }//GEN-LAST:event_txtSeccion1KeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(corroborarTodosDatos()){
            
            if (Integer.parseInt(txtSeccion1.getText()) < 128) {
                corroborarClaseA();
            } else if (Integer.parseInt(txtSeccion1.getText()) >= 128 && Integer.parseInt(txtSeccion1.getText()) < 192) {
                corroborarClaseB();
            } else if (Integer.parseInt(txtSeccion1.getText()) >= 192 && Integer.parseInt(txtSeccion1.getText()) < 224) {
                corroborarClaseC();
            } else if (Integer.parseInt(txtSeccion1.getText()) >= 224 && Integer.parseInt(txtSeccion1.getText()) < 240) {
                detallesClaseD();
            } else if (Integer.parseInt(txtSeccion1.getText()) >= 240 && Integer.parseInt(txtSeccion1.getText()) < 255){
                detallesClaseE();
            }else {
                atxtVisor.setText("Red no detectada posiblemente empiece con 255.");

        }
        }else{
            JOptionPane.showMessageDialog(null, "Algun campo no es valido,");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtSeccion3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeccion3KeyTyped
        txtSeccion3.addKeyListener(new KeyListener() {   
            
            @Override
            public void keyTyped(KeyEvent tecla) {
                int limiteDigitos = 3;
                
                if (txtSeccion3.getText().length() == limiteDigitos){
                    
                    tecla.consume();
                    txtSeccion3.transferFocus();
                }
                
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
            
        });
        
        txtSeccion3.addKeyListener(new KeyAdapter(){
             @Override
             public void keyTyped(KeyEvent tecla) {

                char caracter = tecla.getKeyChar();

        
                if (!(Character.isDigit(caracter) || (caracter == KeyEvent.VK_BACK_SPACE) || (caracter == KeyEvent.VK_DELETE))) {
                    getToolkit().beep();
                    tecla.consume();  
                }
            }
        });
    }//GEN-LAST:event_txtSeccion3KeyTyped

    private void txtSeccion4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeccion4KeyTyped
        txtSeccion4.addKeyListener(new KeyListener() {   
            
            @Override
            public void keyTyped(KeyEvent tecla) {
                             
                int limiteDigitos = 3;

                if (txtSeccion4.getText().length() == limiteDigitos) {

                    tecla.consume();
                    txtSeccion4.transferFocus();
                }

            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
            
        });  
        //cambiarlo por el de la pag.net
        txtSeccion4.addKeyListener(new KeyAdapter(){
             @Override
             public void keyTyped(KeyEvent tecla) {

                char caracter = tecla.getKeyChar();

        
                if (!(Character.isDigit(caracter) || (caracter == KeyEvent.VK_BACK_SPACE) || (caracter == KeyEvent.VK_DELETE))) {
                    getToolkit().beep();
                    tecla.consume();  
                }
            }
        });
        
    }//GEN-LAST:event_txtSeccion4KeyTyped

    private void txtSeccion2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeccion2KeyTyped
        
        txtSeccion2.addKeyListener(new KeyListener() {   
            
            @Override
            public void keyTyped(KeyEvent tecla) {
                int limiteDigitos = 3;
                
                if (txtSeccion2.getText().length() == limiteDigitos){
                    
                    tecla.consume();
                    txtSeccion2.transferFocus();
                }
                
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
        txtSeccion2.addKeyListener(new KeyAdapter(){
             @Override
             public void keyTyped(KeyEvent tecla) {

                char caracter = tecla.getKeyChar();

        
                if (!(Character.isDigit(caracter) || (caracter == KeyEvent.VK_BACK_SPACE) || (caracter == KeyEvent.VK_DELETE) )) {
                    getToolkit().beep();
                    tecla.consume();  
                }
            }
        });
        
    }//GEN-LAST:event_txtSeccion2KeyTyped
    
    public boolean corroborarCamposLlenos(){
        boolean llenos = true;
        
        if(txtSeccion1.getText().isEmpty()){
           llenos = false; 
        }else if (txtSeccion2.getText().isEmpty()){
           llenos = false; 
        }else if (txtSeccion3.getText().isEmpty()){
           llenos = false; 
        }else if (txtSeccion4.getText().isEmpty()){
           llenos = false; 
        }
        return llenos;
    }
    
    public boolean corroborarMenosDe256(){
        boolean menor = true;
        if (Integer.parseInt(txtSeccion1.getText()) >= 256){
            menor = false;
        }else if (Integer.parseInt(txtSeccion2.getText()) >= 256){
            menor = false;
        }else if (Integer.parseInt(txtSeccion3.getText()) >= 256){
            menor = false;
        }else if (Integer.parseInt(txtSeccion4.getText()) >= 256){
            menor = false;
        }
        return menor;
    }
    
     public boolean corroborarMasDe0(){
        boolean menor = true;
        if (Integer.parseInt(txtSeccion1.getText()) < 0){
            menor = false;
        }else if (Integer.parseInt(txtSeccion2.getText()) < 0){
            menor = false;
        }else if (Integer.parseInt(txtSeccion3.getText()) < 0){
            menor = false;
        }else if (Integer.parseInt(txtSeccion4.getText()) < 0){
            menor = false;
        }
        return menor;
    }
     
    public boolean corroborarTodosDatos(){
       
        boolean datosCorrectos = false;
        
        if (corroborarCamposLlenos() && corroborarMenosDe256() && corroborarMasDe0() ){
            
            datosCorrectos = true;
            
        }
        
        return datosCorrectos;
        
    }
    
    public void corroborarClaseA(){
        boolean claseA = false;
        if (Integer.parseInt(txtSeccion2.getText()) != 0 && Integer.parseInt(txtSeccion3.getText()) != 0 && Integer.parseInt(txtSeccion4.getText()) != 0 ){
            
            if (Integer.parseInt(txtSeccion2.getText()) != 255 && Integer.parseInt(txtSeccion3.getText()) != 255 && Integer.parseInt(txtSeccion4.getText()) != 255){
                
                claseA = true;
                
            }
            
        }
        
        if (claseA){
            
            detallesClaseA();
            
        }else {
            JOptionPane.showMessageDialog(null, "춰Direccion de clase A no valida quiz치 introdujo dirreccion de red o de broadcast!");
        }
    }
    
    
    public void detallesClaseA(){
        atxtVisor.setText("");
        atxtVisor.append("IP: "+txtSeccion1.getText()+"."+txtSeccion2.getText()+"."+txtSeccion3.getText()+"."+txtSeccion4.getText()+"\n");
        atxtVisor.append("Direccion de red: " + txtSeccion1.getText()+".0.0.0\n");
        atxtVisor.append("Direccion de Broadcast: " + txtSeccion1.getText()+".255.255.255\n");
        atxtVisor.append("Direccion de m치scara: 255.0.0.0  Prefijo: /8\n");
        atxtVisor.append("Direcci칩n IP de Clase A\n");
        atxtVisor.append("Direcci칩n IP inicial de Clase A es 0.0.0.0 \n");
        atxtVisor.append("Direcci칩n IP final de Clase A es 127.255.255.255 \n");
        
    }
     public void corroborarClaseB(){
        boolean claseB = false;
        if (Integer.parseInt(txtSeccion3.getText()) != 0 && Integer.parseInt(txtSeccion4.getText()) != 0 ){
            
            if (Integer.parseInt(txtSeccion3.getText()) != 255 && Integer.parseInt(txtSeccion4.getText()) != 255){
                
                claseB = true;
                
            }
            
        }
        
        if (claseB){
            
            detallesClaseB();
            
        }else {
            JOptionPane.showMessageDialog(null, "춰Direccion de clase B no valida quiz치 introdujo dirreccion de red o de broadcast!");
        }
    }
    public void detallesClaseB(){
        atxtVisor.setText("");
        atxtVisor.append("IP: "+txtSeccion1.getText()+"."+txtSeccion2.getText()+"."+txtSeccion3.getText()+"."+txtSeccion4.getText()+"\n");
        atxtVisor.append("Direccion de red: " + txtSeccion1.getText()+"."+txtSeccion2.getText()+".0.0\n");
        atxtVisor.append("Direccion de Broadcast: " + txtSeccion1.getText()+"."+txtSeccion2.getText()+".255.255\n");
        atxtVisor.append("Direccion de m치scara: 255.255.0.0  Prefijo: /16\n");
        atxtVisor.append("Direcci칩n IP de Clase B\n");
        atxtVisor.append("Direcci칩n IP inicial de Clase B es 128.0.0.0\n ");
        atxtVisor.append("Direcci칩n IP final de Clase B es 191.255.255.255 \n");
        
    }
    
     public void corroborarClaseC(){
        boolean claseC = false;
        if ( Integer.parseInt(txtSeccion4.getText()) != 0 ){
            
            if (Integer.parseInt(txtSeccion4.getText()) != 255){
                
                claseC = true;
                
            }
            
        }
        
        if (claseC){
            
            detallesClaseB();
            
        }else {
            JOptionPane.showMessageDialog(null, "춰Direccion de clase C no valida quiz치 introdujo dirreccion de red o de broadcast!");
        }
    }

    public void detallesClaseC(){
        atxtVisor.setText("");
        atxtVisor.append("IP: "+txtSeccion1.getText()+"."+txtSeccion2.getText()+"."+txtSeccion3.getText()+"."+txtSeccion4.getText()+"\n");
        atxtVisor.append("Direccion de red: " + txtSeccion1.getText()+"."+txtSeccion2.getText()+"."+txtSeccion3.getText()+".0\n");
        atxtVisor.append("Direccion de Broadcast: " + txtSeccion1.getText()+"."+txtSeccion2.getText()+"."+txtSeccion1.getText()+".255\n");
        atxtVisor.append("Direccion de m치scara: 255.255.255.0  Prefijo: /24\n");
        atxtVisor.append("Direcci칩n IP de Clase C\n");
        atxtVisor.append("Direcci칩n IP inicial de Clase A es 192.0.0.0 \n");
        atxtVisor.append("Direcci칩n IP final de Clase A es 223.255.255.255\n");
        
    }
    public void detallesClaseD(){
        atxtVisor.setText("");
        atxtVisor.append("IP: "+txtSeccion1.getText()+"."+txtSeccion2.getText()+"."+txtSeccion3.getText()+"."+txtSeccion4.getText()+"\n");
        atxtVisor.append("Direccion de m치scara: 255.255.255.255  Prefijo: /32\n");
        atxtVisor.append("Direcci칩n IP de Clase D");
        atxtVisor.append("Direcciones reservadas para multicast.\n");
        atxtVisor.append("Direcci칩n IP inicial de Clase D es 224.0.0.0\n ");
        atxtVisor.append("Direcci칩n IP final de Clase D es 239.255.255.255 \n");
        
    }

    public void detallesClaseE(){
        atxtVisor.setText("");
        atxtVisor.append("IP: "+txtSeccion1.getText()+"."+txtSeccion2.getText()+"."+txtSeccion3.getText()+"."+txtSeccion4.getText()+"\n");
        atxtVisor.append("Direccion de m치scara: 255.255.255.255  Prefijo: /32\n");
        atxtVisor.append("Direcci칩n IP de Clase E\n");
        atxtVisor.append("Direcciones experimentales.\n");
        atxtVisor.append("Direcci칩n IP inicial de Clase  E es 240.0.0.0\n ");
        atxtVisor.append("Direcci칩n IP final de Clase E es 254.255.255.255 \n");
    }
    
    
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Se침orIP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea atxtVisor;
    private javax.swing.JToggleButton btnBuscar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbIndicacion;
    private javax.swing.JTextField txtSeccion1;
    private javax.swing.JTextField txtSeccion2;
    private javax.swing.JTextField txtSeccion3;
    private javax.swing.JTextField txtSeccion4;
    // End of variables declaration//GEN-END:variables
}
